[tox]
envlist = py36, py37, py38, lint, style, docs, coverage, distrib

[travis]
python =
    3.8: py38, lint, style, types, docs, coverage, distrib
    3.7: py37, lint, style, types, docs, coverage, distrib
    3.6: py36, lint, style, types, docs, coverage, distrib

[testenv:lint]
whitelist_externals = make
basepython = python
deps = flake8
commands = make lint

[testenv:types]
whitelist_externals = make
basepython = python
deps = mypy
commands = make check-types

[testenv:style]
whitelist_externals = make
deps = yapf
commands = make check-style

[testenv:docs]
whitelist_externals = make
commands = make docs
extras = docs

[testenv:coverage]
whitelist_externals = make coverage pytest
commands = make check-coverage
deps =
    -r{toxinidir}/requirements_dev.txt
; If you want to make tox run the tests with the same versions, create a
; requirements.txt with the pinned versions and uncomment the following line:
    -r{toxinidir}/requirements.txt

[testenv:distrib]
whitelist_externals = make
commands = make dist
deps =
    -r{toxinidir}/requirements_dev.txt
    ; If you want to make tox run the tests with the same versions, create a
    ; requirements.txt with the pinned versions and uncomment the following line:
    -r{toxinidir}/requirements.txt

[testenv]
setenv =
    PYTHONPATH = {toxinidir}
deps =
    -r{toxinidir}/requirements_dev.txt
; If you want to make tox run the tests with the same versions, create a
; requirements.txt with the pinned versions and uncomment the following line:
    -r{toxinidir}/requirements.txt
commands =
    pip install -U pip
    pytest --basetemp={envtmpdir}
